AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Cybereason Sensor
Parameters:
  AVTagName:
    Default: Antivirus
    Type: String
    Description: Tag name of the target EC2 instances
  AVTagValues:
    Default: 'yes'
    Type: CommaDelimitedList
    Description: Tag values of the target EC2 instances
  AVVersion:
    Type: String
    Description: The version of the antivirus to deploy
    AllowedValues:
    - "20.2.282.0"
  LogBucketName:
    Type: String
    Description: Bucket name for association's logs
  LogBucketPrefix:
    Type: String
    Description: Bucket prefix for association's logs
Conditions:
  CreateS3Bucket: !Equals [ !Ref LogBucketName, '' ]
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Antivirus
        Parameters:
          - AVTagName
          - AVTagValues
          - AVVersion
      -
        Label:
          default: Logging
        Parameters:
          - LogBucketName
          - LogBucketPrefix
    ParameterLabels:
      AVTagName:
        default: Name of the tag used to deploy the antivirus
      AVTagValues:
        default: Value(s) used to deploy the antivirus
      AVVersion:
        default: Version of the antivirus to deploy
      LogBucketName:
        default: Name of an existing bucket that you want to use or leave blank to create a new bucket
      LogBucketPrefix:
        default: Prefix of the bucket
Resources:
  LoggingBucket:
    Type: AWS::S3::Bucket
    Condition: CreateS3Bucket
    Properties:
      BucketName: !Sub cybereason-logging-${AWS::AccountId}
      LifecycleConfiguration:
        Rules: 
        - ExpirationInDays: 90
          Status: Enabled
  CybereasonDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        description: Install Cybereason Sensor
        schemaVersion: '2.2'
        mainSteps:
        - action: aws:runPowerShellScript
          name: uninstallWindowsDefenderAndReboot
          precondition:
            StringEquals:
            - platformType
            - Windows
          inputs:
            runCommand:
            - |
                $ErrorActionPreference = "Stop"
                $defender = Get-WindowsFeature -Name "Windows-Defender"
                if($defender.Installed){
                  $defender | Uninstall-WindowsFeature
                  # https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-reboot.html
                  exit 3010
                }
        - action: aws:runPowerShellScript
          name: installCybereasonSensorWindows
          precondition:
            StringEquals:
            - platformType
            - Windows
          inputs:
            runCommand:
            - !Sub  |
                $ErrorActionPreference = "Stop"
                if(-not (Get-WmiObject Win32_Product -Filter "Name='Cybereason Sensor' AND Version >= '${AVVersion}'")){
                  $folder=Join-Path ([System.IO.Path]::GetTempPath()) 'CybereasonInstall'
                  Copy-S3Object -BucketName 'cybereasonsensor' -KeyPrefix '/Windows/' -LocalFolder $folder
                  Start-Process (Join-Path $folder ('CybereasonSensor64_'+('${AVVersion}' -replace '\.','_')+'_tamedia_tamedia-r.cybereason.net_443_ACTIVE_NORMAL')) -ArgumentList '/install','/norestart','/quiet','-l C:\Windows\Temp\CybereasonInstall.log','AP_POLICIES_INITIAL_POLICY_ID=e38bbdd5-f4d2-47d5-b1d9-7ad69ad22ca0' -Wait
                  Remove-Item $folder -Force -Recurse
                }
        - action: aws:runShellScript
          name: installCybereasonSensorLinux
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - !Sub |
                #!/bin/bash
                set -e
                if ! rpm -qi cybereason-sensor-${AVVersion}-1 --quiet; then
                  agentPath='/tmp/cybereasonInstall/'
                  aws s3 cp s3://cybereasonsensor/Linux/cybereason-sensor-${AVVersion}-1.x86_64_tamedia_tamedia-r.cybereason.net_443_ACTIVE_NORMAL_rpm.rpm $agentPath
                  rpm -Uhv $agentPath/cybereason-sensor-${AVVersion}-1.x86_64_tamedia_tamedia-r.cybereason.net_443_ACTIVE_NORMAL_rpm.rpm
                  rm -rf $agentPath
                fi
  CybereasonDocumentAssociation:
    Type: AWS::SSM::Association
    Properties:
      OutputLocation:
        S3Location:
          OutputS3BucketName:
            !If
            - CreateS3Bucket
            - !Ref LoggingBucket
            - !Ref LogBucketName
          OutputS3KeyPrefix: !Ref LogBucketPrefix
      ScheduleExpression: rate(2 hours)
      Name: !Ref CybereasonDocument
      Targets:
      - Key: !Sub tag:${AVTagName}
        Values: !Ref AVTagValues
